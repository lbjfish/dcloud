<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sida.dcloud.system.dao.SysRoleMapper" >
  <resultMap id="SysRoleResultMap" type="com.sida.dcloud.auth.po.SysRole" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="org_id" property="orgId" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="last_updated" property="lastUpdated" jdbcType="TIMESTAMP" />
    <result column="created_user" property="createdUser" jdbcType="VARCHAR" />
    <result column="updated_user" property="updatedUser" jdbcType="VARCHAR" />
    <result column="disable" property="disable" jdbcType="BIT" />
    <result column="delete_flag" property="deleteFlag" jdbcType="BIT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="alias" property="alias" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="SysRole_Column_List" >
    id, org_id, created_at, last_updated, created_user, updated_user, disable, delete_flag, 
    name, code, status, alias, description
  </sql>
  <select id="selectByPrimaryKey" resultMap="SysRoleResultMap" parameterType="java.lang.String" >
    select 
    <include refid="SysRole_Column_List" />
    from sys_role
    where id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_role
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="com.sida.dcloud.auth.po.SysRole" >
    insert into sys_role (id, org_id, created_at, last_updated, created_user, updated_user, 
      disable, delete_flag, name, code, status, alias, description
      )
    values (#{id}, #{orgId}, #{createdAt}, #{lastUpdated}, #{createdUser}, #{updatedUser}, 
      #{disable}, #{deleteFlag}, #{name}, #{code}, #{status}, #{alias}, #{description}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sida.dcloud.auth.po.SysRole" >
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orgId != null" >
        org_id,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="lastUpdated != null" >
        last_updated,
      </if>
      <if test="createdUser != null" >
        created_user,
      </if>
      <if test="updatedUser != null" >
        updated_user,
      </if>
      <if test="disable != null" >
        disable,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="alias != null" >
        alias,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id},
      </if>
      <if test="orgId != null" >
        #{orgId},
      </if>
      <if test="createdAt != null" >
        #{createdAt},
      </if>
      <if test="lastUpdated != null" >
        #{lastUpdated},
      </if>
      <if test="createdUser != null" >
        #{createdUser},
      </if>
      <if test="updatedUser != null" >
        #{updatedUser},
      </if>
      <if test="disable != null" >
        #{disable},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag},
      </if>
      <if test="name != null" >
        #{name},
      </if>
      <if test="code != null" >
        #{code},
      </if>
      <if test="status != null" >
        #{status},
      </if>
      <if test="alias != null" >
        #{alias},
      </if>
      <if test="description != null" >
        #{description},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sida.dcloud.auth.po.SysRole" >
    update sys_role
    <set >
      <if test="orgId != null" >
        org_id = #{orgId},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt},
      </if>
      <if test="lastUpdated != null" >
        last_updated = #{lastUpdated},
      </if>
      <if test="createdUser != null" >
        created_user = #{createdUser},
      </if>
      <if test="updatedUser != null" >
        updated_user = #{updatedUser},
      </if>
      <if test="disable != null" >
        disable = #{disable},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag},
      </if>
      <if test="name != null" >
        name = #{name},
      </if>
      <if test="code != null" >
        code = #{code},
      </if>
      <if test="status != null" >
        status = #{status},
      </if>
      <if test="alias != null" >
        alias = #{alias},
      </if>
      <if test="description != null" >
        description = #{description},
      </if>
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sida.dcloud.auth.po.SysRole" >
    update sys_role
    set org_id = #{orgId},
      created_at = #{createdAt},
      last_updated = #{lastUpdated},
      created_user = #{createdUser},
      updated_user = #{updatedUser},
      disable = #{disable},
      delete_flag = #{deleteFlag},
      name = #{name},
      code = #{code},
      status = #{status},
      alias = #{alias},
      description = #{description}
    where id = #{id}
  </update>
  <sql id="Where_Condition" >
    <where >
      <if test="orgId != null and orgId != ''" >
        org_id = #{orgId}
      </if>
      <if test="createdAt != null" >
        AND created_at = #{createdAt}
      </if>
      <if test="lastUpdated != null" >
        AND last_updated = #{lastUpdated}
      </if>
      <if test="createdUser != null and createdUser != ''" >
        AND created_user = #{createdUser}
      </if>
      <if test="updatedUser != null and updatedUser != ''" >
        AND updated_user = #{updatedUser}
      </if>
      <if test="disable != null" >
        AND disable = #{disable}
      </if>
      <if test="deleteFlag != null" >
        AND delete_flag = #{deleteFlag}
      </if>
      <if test="name != null and name != ''" >
        AND name = #{name}
      </if>
      <if test="code != null and code != ''" >
        AND code = #{code}
      </if>
      <if test="status != null" >
        AND status = #{status}
      </if>
      <if test="alias != null and alias != ''" >
        AND alias = #{alias}
      </if>
      <if test="description != null and description != ''" >
        AND description = #{description}
      </if>
    </where>
  </sql>
  <select id="selectByCondition" parameterType="com.sida.dcloud.auth.po.SysRole" resultMap="SysRoleResultMap" >
    select 
    <include refid="SysRole_Column_List" />
    from sys_role
    <include refid="Where_Condition" />
    <if test="orderField != null and orderField != ''" >
      ORDER BY ${orderField}
      <if test="orderString != null and orderString != ''" >
         ${orderString}
      </if>
    </if>
  </select>
  <update id="updateByIdsSelective" >
    update sys_role
    <set >
      <if test="po.orgId != null" >
        org_id = #{po.orgId},
      </if>
      <if test="po.createdAt != null" >
        created_at = #{po.createdAt},
      </if>
      <if test="po.lastUpdated != null" >
        last_updated = #{po.lastUpdated},
      </if>
      <if test="po.createdUser != null" >
        created_user = #{po.createdUser},
      </if>
      <if test="po.updatedUser != null" >
        updated_user = #{po.updatedUser},
      </if>
      <if test="po.disable != null" >
        disable = #{po.disable},
      </if>
      <if test="po.deleteFlag != null" >
        delete_flag = #{po.deleteFlag},
      </if>
      <if test="po.name != null" >
        name = #{po.name},
      </if>
      <if test="po.code != null" >
        code = #{po.code},
      </if>
      <if test="po.status != null" >
        status = #{po.status},
      </if>
      <if test="po.alias != null" >
        alias = #{po.alias},
      </if>
      <if test="po.description != null" >
        description = #{po.description},
      </if>
    </set>
    where 1=2
    <if test="ids != null and ids.size > 0" >
      <foreach collection="ids" item="listItem" open="or id in(" close=")" separator="," >
        #{listItem}
      </foreach>
    </if>
  </update>

  <!--自定义sql-->
  <select id="selectRolesByUserId" resultMap="SysRoleResultMap" parameterType="java.lang.String" >
    select
    <include refid="SysRole_Column_List" />
    from sys_role role
    inner join sys_user_role user_role on role.id = user_role.role_id
    where user_role.user_id = #{userId,jdbcType=VARCHAR}
  </select>

  <!--自定义sql-->
  <update id="enableRoles">
    update sys_role
    set status = 0
    where id in (${roleIds})
  </update>

  <update id="disableRoles">
    update sys_role
    set status = 1
    where id in (${roleIds})
  </update>

  <select id="findList" parameterType="com.sida.dcloud.auth.po.SysRole" resultMap="SysRoleResultMap">
    select
    <include refid="SysRole_Column_List" />
    from sys_role
    where disable = 0 AND delete_flag = 0
    <if test="name != null and name != ''">
      AND name LIKE concat('%',#{name},'%')
    </if>
    <if test="status != null">
      AND status = #{status}
    </if>
  </select>

  <select id="selectByCode" resultMap="SysRoleResultMap" parameterType="java.lang.String">
    select
    <include refid="SysRole_Column_List" />
    from sys_role
    where disable = 0 AND delete_flag = 0
    and status = 0 and code = #{code}
    limit 1
  </select>

  <select id="selectByCodes" resultMap="SysRoleResultMap">
    select
    <include refid="SysRole_Column_List" />
    from sys_role
    where disable = 0 AND delete_flag = 0
    and status = 0
    <if test="codes != null and codes.size > 0" >
      <foreach collection="codes" item="listItem" open="and code in(" close=")" separator="," >
        #{listItem}
      </foreach>
    </if>
  </select>

  <delete id="removeAll" >
    delete r from sys_role r
    where EXISTS (select 1 from sys_position p where r.id = p.id and p.third_party_id is not null and p.third_party_id != '')
    or r.id in ('1','2','3','4')
  </delete>

  <insert id="batchInsert" parameterType="java.util.List">
    insert into sys_role (id, org_id, created_at, last_updated, created_user, updated_user,
    disable, delete_flag, name, code, status, alias, description )
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id}, #{item.orgId}, #{item.createdAt}, #{item.lastUpdated}, #{item.createdUser}, #{item.updatedUser},
        #{item.disable}, #{item.deleteFlag}, #{item.name}, #{item.code}, #{item.status}, #{item.alias}, #{item.description}
      )
    </foreach>
  </insert>

  <insert id="insertWithPositions" >
    insert into sys_role (id, org_id, created_at, last_updated, created_user, updated_user,
                          disable, delete_flag, name, code, status, alias, description )
    select t.id, t.org_id, t.created_at, t.last_updated, t.created_user, t.updated_user,
          t.disable, t.delete_flag, t.name, case when t2.code is not null then concat(t.code,t.third_party_id) else t.code end code, t.disable, t.alias, t.description
    from sys_position t
    left join sys_position t2 on t.code = t2.code and t.id != t2.id
    where t.code is not null and t.code != '' and t.third_party_id is not null and t.third_party_id != ''
    group by t.id
  </insert>

  <insert id="insertWithPositionList" parameterType="java.util.List">
    insert into sys_role (id, org_id, created_at, last_updated, created_user, updated_user,
    disable, delete_flag, name, code, status, alias, description )
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id}, #{item.orgId}, #{item.createdAt}, #{item.lastUpdated}, #{item.createdUser}, #{item.updatedUser},
      #{item.disable}, #{item.deleteFlag}, #{item.name}, #{item.code}, #{item.disable}, #{item.alias}, #{item.description}
      )
    </foreach>
  </insert>

  <select id="findByIds" resultMap="SysRoleResultMap" parameterType="java.lang.String" >
    select
    <include refid="SysRole_Column_List" />
    from sys_role
    where 1=2
    <if test="ids != null and ids.size > 0" >
      <foreach collection="ids" item="listItem" open="or id in(" close=")" separator="," >
        #{listItem}
      </foreach>
    </if>
  </select>

  <update id="updateWithPositions">
    update sys_role
    <trim prefix="set" suffixOverrides=",">
      <trim prefix=" org_id = case " suffix=" end," >
        <foreach collection="list" item="po" open="" close="" separator="" >
          <if test="po.orgId != null ">
            when id = #{po.id} then #{po.orgId}
          </if>
        </foreach>
      </trim>
      <trim prefix=" created_at = case " suffix=" end," >
        <foreach collection="list" item="po" open="" close="" separator="" >
          <if test="po.createdAt != null ">
            when id = #{po.id} then #{po.createdAt}
          </if>
        </foreach>
      </trim>
      <trim prefix=" last_updated = case " suffix=" end," >
        <foreach collection="list" item="po" open="" close="" separator="" >
          <if test="po.lastUpdated != null ">
            when id = #{po.id} then #{po.lastUpdated}
          </if>
        </foreach>
      </trim>
      <trim prefix=" created_user = case " suffix=" end," >
        <foreach collection="list" item="po" open="" close="" separator="" >
          <if test="po.createdUser != null ">
            when id = #{po.id} then #{po.createdUser}
          </if>
        </foreach>
      </trim>
      <trim prefix=" updated_user = case " suffix=" end," >
        <foreach collection="list" item="po" open="" close="" separator="" >
          <if test="po.updatedUser != null ">
            when id = #{po.id} then #{po.updatedUser}
          </if>
        </foreach>
      </trim>
      <trim prefix=" disable = case " suffix=" end," >
        <foreach collection="list" item="po" open="" close="" separator="" >
          <if test="po.disable != null ">
            when id = #{po.id} then #{po.disable}
          </if>
        </foreach>
      </trim>
      <trim prefix=" delete_flag = case " suffix=" end," >
        <foreach collection="list" item="po" open="" close="" separator="" >
          <if test="po.deleteFlag != null ">
            when id = #{po.id} then #{po.deleteFlag}
          </if>
        </foreach>
      </trim>
      <trim prefix=" name = case " suffix=" end," >
        <foreach collection="list" item="po" open="" close="" separator="" >
          <if test="po.name != null ">
            when id = #{po.id} then #{po.name}
          </if>
        </foreach>
      </trim>
      <trim prefix=" code = case " suffix=" end," >
        <foreach collection="list" item="po" open="" close="" separator="" >
          <if test="po.code != null ">
            when id = #{po.id} then #{po.code}
          </if>
        </foreach>
      </trim>
      <trim prefix=" status = case " suffix=" end," >
        <foreach collection="list" item="po" open="" close="" separator="" >
          <if test="po.disable != null ">
            when id = #{po.id} then #{po.disable}
          </if>
        </foreach>
      </trim>
      <trim prefix=" alias = case " suffix=" end," >
        <foreach collection="list" item="po" open="" close="" separator="" >
          <if test="po.alias != null ">
            when id = #{po.id} then #{po.alias}
          </if>
        </foreach>
      </trim>
      <trim prefix=" description = case " suffix=" end," >
        <foreach collection="list" item="po" open="" close="" separator="" >
          <if test="po.description != null ">
            when id = #{po.id} then #{po.description}
          </if>
        </foreach>
      </trim>
    </trim>
    where
    <foreach collection="list" item="po" open="id in (" close=")" separator=",">
      #{po.id}
    </foreach>
  </update>

  <resultMap id="RoleDTOResultMap" type="com.sida.dcloud.auth.vo.RoleDTO" >
    <id column="id" property="roleId" jdbcType="VARCHAR" />
    <result column="name" property="roleName" jdbcType="VARCHAR" />
    <result column="code" property="roleCode" jdbcType="VARCHAR" />
  </resultMap>

  <select id="findRoleListByUserId" resultMap="RoleDTOResultMap" parameterType="java.lang.String" >
    select r.id,r.name,r.`code`
    from sys_user t
    left join sys_user_role ur on t.id = ur.user_id
    left join sys_role r on ur.role_id = r.id
    where t.id = #{userId}
  </select>

  <select id="checkIfEmpLikeRoleScope" resultType="java.lang.Integer" >
    select count(0) from sys_user_role where role_id in (
      select id from sys_role where delete_flag = false and name like concat('%',#{roleScope},'%')
  ) and user_id = #{empId}
  </select>

  <select id="checkIfEmpInRoleScope" resultType="java.lang.Integer" >
    select count(0) from sys_user_role where role_id in (
      select id from sys_role where delete_flag = false and name
      in (
      <foreach collection="roles" item="role" separator="," >
         #{role}
      </foreach>
      )
    ) and user_id = #{empId}
  </select>

</mapper>